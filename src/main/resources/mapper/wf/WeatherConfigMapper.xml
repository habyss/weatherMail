<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.demo.mapper.wf.WeatherConfigMapper">
  <resultMap id="BaseResultMap" type="com.test.demo.entity.WeatherConfig">
    <!--@mbg.generated-->
    <id column="id" property="id" />
    <result column="type" property="type" />
    <result column="status" property="status" />
    <result column="value" property="value" />
    <result column="update_time" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `type`, `status`, `value`, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from weather_config
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from weather_config
    where id = #{id}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.test.demo.entity.WeatherConfig" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into weather_config (`type`, `status`, `value`, update_time)
    values (#{type}, #{status}, #{value}, #{updateTime})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.test.demo.entity.WeatherConfig" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into weather_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        `type`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="value != null">
        `value`,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type},
      </if>
      <if test="status != null">
        #{status},
      </if>
      <if test="value != null">
        #{value},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.demo.entity.WeatherConfig">
    <!--@mbg.generated-->
    update weather_config
    <set>
      <if test="type != null">
        `type` = #{type},
      </if>
      <if test="status != null">
        `status` = #{status},
      </if>
      <if test="value != null">
        `value` = #{value},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.demo.entity.WeatherConfig">
    <!--@mbg.generated-->
    update weather_config
    set `type` = #{type},
      `status` = #{status},
      `value` = #{value},
      update_time = #{updateTime}
    where id = #{id}
  </update>

<!--auto generated by MybatisCodeHelper on 2019-06-13-->
  <select id="getOneByType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from weather_config
        where `type`=#{type} and status = 1
    </select>

<!--auto generated by MybatisCodeHelper on 2019-06-13-->
  <select id="getAllByType" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from weather_config
    where `type`=#{type} and status = 1
  </select>

<!--auto generated by MybatisCodeHelper on 2019-06-17-->
  <select id="getSubject" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from weather_config
    where `type`=#{type} and status = 1 order by update_time limit 1;
  </select>

  <select id="getAllTest" resultType="com.test.demo.entity.model.WeatherConfigCommand">
    select
    <include refid="Base_Column_List" />
    from weather_config
  </select>

  <select id="getAllRepeat" resultType="com.test.demo.entity.model.WeatherConfigCommand">
    select  count(1) num,max(id) id
    from weather_config where status = 1 and type = 'subject' group by value having num > 1;
  </select>

<!--auto generated by MybatisCodeHelper on 2019-10-30-->
  <delete id="deleteByIdIn">
    delete from weather_config
    where id in
    <foreach item="item" index="index" collection="idCollection"
             open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

<!--auto generated by MybatisCodeHelper on 2019-10-30-->
  <select id="getAllByValue" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from weather_config
    where `value`=#{value}
  </select>
</mapper>